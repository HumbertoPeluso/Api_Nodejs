{"version":3,"file":"/home/humberto/Documents/Superprof/Moises/Web/Project/src/backend/controllers/linksController.ts","sources":["/home/humberto/Documents/Superprof/Moises/Web/Project/src/backend/controllers/linksController.ts"],"names":[],"mappings":"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","sourcesContent":["import express = require(\"express\");\nimport * as joi from \"joi\";\nimport { getLinkRepository } from \"../repositories/linkRepository\";\nimport { getVoteRepository } from \"../repositories/voteRepository\";\nimport { Vote } from \"../entities/vote\";\nimport { getCommentsRepository } from \"../repositories/commentsRepository\";\nimport { authMiddleware } from \"../middleware/authMiddleware\";\nimport { Repository } from \"typeorm\";\nimport { Link } from \"../entities/link\";\nimport { Comments } from \"../entities/comments\";\n\n\n\n// Declare Joi Schema so we can validate movies\nconst linkDetailsSchema = {\n    id: joi.number(),\n    user: joi.object(),\n    url: joi.string(),\n    title: joi.string()\n};\n\nconst voteDetailsSchema = {\n    id: joi.number(),\n    user: joi.object(),\n    link: joi.object(),\n    positiveVote: joi.boolean()\n};\n\nexport function postLinksHandler(linkRepo: Repository<Link>, voteRepo: Repository<Vote>) {\n\n    const postALink = (req: express.Request, res: express.Response) => {\n        (async () => {\n            const newLink = req.body;\n            const result = joi.validate(newLink, linkDetailsSchema);\n            if (result.error) {\n                res.status(400).send({ msg: \"validation failed\" });\n            } else {\n                await linkRepo.save(newLink);\n                res.json({ newLink }).send();\n            }\n        })().catch(error => {\n            console.log('Error', error.message)\n        });\n    };\n\n    const postUpvote = (req: express.Request, res: express.Response) => {\n\n        (async () => {\n            const id = req.params.id;\n            const link = await linkRepo.findOne(id, { relations: [\"user\"] });\n            console.log(link)\n            if (link == null) {\n                res.status(404).send({ msg: \"link no found\" });\n            } else {\n                const userId = link.user.id;\n                const newVote = {\n                    link: link,\n                    user: {\n                        id: userId,\n                    },\n                    positiveVote: true\n                }\n                const result = joi.validate(newVote, voteDetailsSchema)\n                if (result.error) {\n                    res.status(400).send({ msg: \"vote not valid\" })\n                } else {\n                    try {\n                        await voteRepo.save(newVote);\n                        res.json(newVote).send();\n                    } catch (err) {\n                        console.log(err);\n                        res.status(500).send({ msg: \"user not permit to vote in this link\" })\n                    }\n\n                }\n\n\n            }\n        })().catch(error => {\n            console.log('Error', error.message)\n        });\n    };\n\n    const postDownvote = (req: express.Request, res: express.Response) => {\n\n        (async () => {\n            const id = req.params.id;\n            const link = await linkRepo.findOne(id, { relations: [\"user\"] });\n            console.log(link)\n            if (link == null) {\n                res.status(404).send({ msg: \"link no found\" });\n            } else {\n                const userId = link.user.id;\n                //await userRepo.findOne(ownerUserId);\n                console.log(userId);\n\n                const newVote = {\n                    link: link,\n                    user: {\n                        id: userId,\n                    },\n                    positiveVote: false\n                }\n                const result = joi.validate(newVote, voteDetailsSchema)\n                if (result.error) {\n                    res.status(400).send({ msg: \"vote not valid\" })\n                } else {\n                    try {\n                        await voteRepo.save(newVote);\n                        res.json(newVote).send();\n                    } catch (err) {\n                        console.log(err);\n                        res.status(500).send({ msg: \"user not permit to vote in this link\" })\n                    }\n\n                }\n\n\n            }\n        })().catch(error => {\n            console.log('Error', error.message)\n        });\n    };\n    return {\n        postALink: postALink,\n        postUpvote: postUpvote,\n        postDownvote:postDownvote\n    };\n};\n\nexport function getLinksHandler(linkRepo:Repository<Link>,commentsRepo:Repository<Comments>){\n\n    const getAllLinks = (req:express.Request,res:express.Response)=>{\n        (async()=>{\n            const link = await linkRepo.find();\n            console.log(link);\n            if (link == null) {\n                res.status(404).send();\n            } else {\n                res.json({ link });\n            }\n        })().catch(error => {\n            console.log('Error', error.message)\n        });\n    }\n\n    const getLinkById = (req:express.Request,res:express.Response)=>{\n        (async()=>{\n            const id = req.params.id;\n            const link = await linkRepo.findOne(id);\n            if (link == null) {\n                res.status(404).send();\n            } else {\n                const comments = await commentsRepo.find({ link });\n                res.json({ link, comments });\n            }\n        })().catch(error => {\n            console.log('Error', error.message)\n        });\n    }\n    return{\n        getAllLinks:getAllLinks,\n        getLinkById:getLinkById\n    };\n}\n\nexport function deleteLinksHandler(linkRepo:Repository<Link>){\n\n    const deleteALink = (req:express.Request,res:express.Response)=>{\n        (async()=>{\n            const id = req.params.id;\n            const ownerUserId = (req as any).userId;\n            const link = await linkRepo.findOne({ id: id, user: { id: ownerUserId } });\n            if (link == null) {\n                res.status(404).send({ MSG: \"not permited\" });\n            } else {\n                await linkRepo.delete(id);\n                res.json({ ok: \"ok\" });\n            }\n        })().catch(error => {\n            console.log('Error', error.message)\n        });\n    }\n\n    return{\n        deleteALink:deleteALink\n    };\n}\nexport function getLinksController() {\n\n    // Create a repository so we can perform database operations\n    const linkRepository = getLinkRepository();\n    const voteRepository = getVoteRepository();\n    const commentsRepository = getCommentsRepository();\n\n    // Create router instance so we can declare enpoints\n    const router = express.Router();\n\n    const postLinks = postLinksHandler(linkRepository, voteRepository);\n    const getLinks = getLinksHandler(linkRepository,commentsRepository);\n    const deleteLinks = deleteLinksHandler(linkRepository)\n\n    // HTTP POST http://localhost:8080/api/v1/links\n    router.post(\"/\", authMiddleware, postLinks.postALink);\n\n    // HTTP POST http://localhost:8080/api/v1/links/:id/upvote \n    router.post(\"/:id/upvote\", authMiddleware, postLinks.postUpvote)\n\n    // HTTP POST http://localhost:8080/api/v1/links/:id/downvote\n    router.post(\"/:id/downvote\",authMiddleware,postLinks.postDownvote)\n\n    // HTTP GET http://localhost:8080/api/v1/links \n    router.get(\"/\", getLinks.getAllLinks);\n\n    // HTTP GET http://localhost:8080/api/v1/links/:id\n    router.get(\"/:id\",getLinks.getLinkById)\n\n    // HTTP DELETE http://localhost:8080/api/v1/links/:id\n    router.get(\"/:id\",authMiddleware, deleteLinks.deleteALink)\n\n    return router;\n}\n\n\n"]}