{"version":3,"file":"/home/humberto/Documents/Superprof/Moises/Web/Project/src/backend/controllers/commentsController.ts","sources":["/home/humberto/Documents/Superprof/Moises/Web/Project/src/backend/controllers/commentsController.ts"],"names":[],"mappings":"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","sourcesContent":["import { getCommentsRepository } from \"../repositories/commentsRepository\";\nimport express = require(\"express\");\nimport * as joi from \"joi\";\nimport { authMiddleware } from \"../middleware/authMiddleware\";\n\n\nexport function getCommentsController(){\n\n    // Create a repository so we can perform database operations\n    const commentsRepository = getCommentsRepository();\n    // Create router instance so we can declare enpoints\n    const router = express.Router();\n     // Declare Joi Schema so we can validate movies\n     const commentsDetailsSchema = {\n        id: joi.number(),\n        user: joi.object(),\n        link: joi.object(),\n        contentComment: joi.string()\n    };\n\n    // HTTP POST http://localhost:8080/api/v1/comments\n    router.post(\"/\",authMiddleware,(req, res)=>{\n        (async()=>{\n            const newComment = req.body;\n            const result = joi.validate(newComment, commentsDetailsSchema)\n            if(result.error){\n                res.status(400).send({msg:\"comment is not valid\"});\n            }else{\n                const comments = await commentsRepository.save(newComment);\n                res.json(comments);\n            }\n        })().catch(error => {\n            console.log('Error', error.message)\n        });\n    });\n\n    // HTTP DELETE http://localhost:8080/api/v1/comments/:id\n    router.delete(\"/:id\",authMiddleware,(req,res)=>{\n        (async()=>{\n            const ownerUserId = (req as any).userId;\n            const id = req.params.id;\n            const hasComment = await commentsRepository.findOne(id);\n            if(!hasComment){\n                res.status(404).send({ MSG: \"comment not found\" });\n            }else{\n                const comment = await commentsRepository.findOne({id:id, user:{id:ownerUserId}})\n                if(comment==null){\n                    res.status(400).send({msg:\"user not able to delete this comment\"})\n                }else{\n                    await commentsRepository.delete(id);\n                    res.json({ok:\"Ok\"});\n                }\n            }\n        })();\n    });\n    // HTTP PATCH http://localhost:8080/api/v1/comments/:id\n    router.patch(\"/:id\",authMiddleware,(req,res)=>{\n        (async()=>{\n            const ownerUserId = (req as any).userId;\n            const id = req.params.id;\n            const hasComment = await commentsRepository.findOne(id);\n            if(!hasComment){\n                res.status(404).send({msg:\"comment not found\"});\n            }else{\n                const comment = await commentsRepository.findOne({id:id, user:{id:ownerUserId}});\n                if(comment==null){\n                    res.status(400).send({msg:\"user not able to update this comment\"});\n                }else{\n                   \n                    await commentsRepository.update(id,{contentComment:req.body.contentComment});\n                    res.json({ok:\"Ok\"});\n                }\n\n            }\n        })().catch(error => {\n            console.log('Error', error.message)\n        });\n    });\n    return router;\n}"]}