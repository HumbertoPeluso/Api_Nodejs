{"version":3,"file":"/home/humberto/Documents/Superprof/Moises/Web/Project/src/backend/controllers/linksController.ts","sources":["/home/humberto/Documents/Superprof/Moises/Web/Project/src/backend/controllers/linksController.ts"],"names":[],"mappings":"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","sourcesContent":["import express = require(\"express\");\nimport * as joi from \"joi\";\nimport { getLinkRepository } from \"../repositories/linkRepository\";\nimport { getVoteRepository } from \"../repositories/voteRepository\";\nimport { Vote } from \"../entities/vote\";\nimport { getCommentsRepository } from \"../repositories/commentsRepository\";\nimport { authMiddleware } from \"../middleware/authMiddleware\";\nimport { getUserRepository } from \"../repositories/userRepository\";\nimport { Repository } from \"typeorm\";\nimport { Link } from \"../entities/link\";\n\n\nconst linkDetailsSchema = {\n    id: joi.number(),\n    user: joi.object(),\n    url: joi.string(),\n    title: joi.string()\n};\nexport function getLinksController() {\n\n    // Create a repository so we can perform database operations\n    const linkRepository = getLinkRepository();\n    const voteRepository = getVoteRepository();\n    const commentsRepository = getCommentsRepository();\n    const userRepository = getUserRepository();\n\n    \n\n    // Create router instance so we can declare enpoints\n    const router = express.Router();\n\n    const linkHandlers =  postLinks(linkRepository);\n\n    // Declare Joi Schema so we can validate movies\n    const voteDetailsSchema = {\n        id: joi.number(),\n        user: joi.object(),\n        link: joi.object(),\n        positiveVote: joi.boolean()\n    };\n\n    \n\n    // HTTP POST http://localhost:8080/api/v1/links/:id/upvote \n    router.post(\"/:id/upvote\", authMiddleware, (req, res) => {\n        (async () => {\n            const id = req.params.id;\n            const link = await linkRepository.findOne(id);\n            if (link == null) {\n                res.status(404).send({ msg: \"link no found\" });\n            } else {\n                const ownerUserId = (req as any).userId;\n                const user = await userRepository.findOne(ownerUserId);\n                console.log(user);\n                if (user == null) {\n                    res.status(404).send({ msg: \"user no found\" })\n                } else {\n                    const newVote = new Vote();\n                    newVote.link = link;\n                    newVote.user = user;\n                    newVote.positiveVote = true;\n                    const result = joi.validate(newVote, voteDetailsSchema)\n                    if (result.error) {\n                        res.status(400).send({ msg: \"vote not valid\" })\n                    } else {\n                        try {\n                             await voteRepository.save(newVote);\n                            res.json(newVote).send();\n                        } catch (err) {\n                            console.log(err);\n                            res.status(500).send({ msg: \"user not permit to vote in this link\" })\n                        }\n\n                    }\n                }\n\n            }\n        })().catch(error => {\n            console.log('Error', error.message)\n        });\n    });\n\n    // HTTP POST http://localhost:8080/api/v1/links/:id/downvote \n    router.post(\"/:id/downvote\", authMiddleware, (req, res) => {\n        (async () => {\n            const id = req.params.id;\n            const link = await linkRepository.findOne(id);\n            if (link == null) {\n                res.status(404).send({ msg: \"link no found\" });\n            } else {\n                const ownerUserId = (req as any).userId;\n                const user = await userRepository.findOne(ownerUserId);\n                console.log(user);\n                if (user == null) {\n                    res.status(404).send({ msg: \"user no found\" })\n                } else {\n                    const newVote = new Vote();\n                    newVote.link = link;\n                    newVote.user = user;\n                    newVote.positiveVote = false;\n                    const result = joi.validate(newVote, voteDetailsSchema)\n                    if (result.error) {\n                        res.status(400).send({ msg: \"vote not valid\" })\n                    } else {\n                        try {\n                            await voteRepository.save(newVote);\n                            res.json(newVote).send();\n                        } catch (err) {\n                            console.log(err);\n                            res.status(500).send({ msg: \"user not permit to vote in this link\" })\n                        }\n\n                    }\n                }\n\n            }\n        })().catch(error => {\n            console.log('Error', error.message)\n        });\n    });\n\n    // HTTP GET http://localhost:8080/api/v1/links \n    router.get(\"/\", (req, res) => {\n        (async () => {\n            const link = await linkRepository.find();\n            console.log(link);\n            if (link == null) {\n                res.status(404).send();\n            } else {\n                res.json({ link });\n            }\n        })().catch(error => {\n            console.log('Error ', error.message)\n        });\n    });\n\n    // HTTP GET http://localhost:8080/api/v1/links/:id\n    router.get(\"/:id\", (req, res) => {\n        (async () => {\n            const id = req.params.id;\n            const link = await linkRepository.findOne(id);\n            if (link == null) {\n                res.status(404).send();\n            } else {\n                const comments = await commentsRepository.find({link});\n                res.json({ link, comments });\n            }\n        })().catch(error => {\n            console.log('Error ', error.message)\n        });\n    });\n\n    // HTTP DELETE http://localhost:8080/api/v1/links/:id\n    router.delete(\"/:id\", authMiddleware, (req, res) => {\n        (async () => {\n            const id = req.params.id;\n            const ownerUserId = (req as any).userId;\n            const link = await linkRepository.findOne({ id: id, user: { id: ownerUserId } });\n            if (link == null) {\n                res.status(404).send({ MSG: \"not permited\" });\n            } else {\n                await linkRepository.delete(id);\n                res.json({ ok: \"ok\" });\n            }\n        })().catch(error => {\n            console.log('Error', error.message)\n        });\n    });\n\n    // HTTP POST http://localhost:8080/api/v1/links\n    router.post(\"/\", authMiddleware,linkHandlers.httpGetLinks);\n    return router;\n}\n\n\nexport function postLinks( repo:Repository<Link>){\n    const httpGetLinks = (\n        req:express.Request,\n        res:express.Response\n    )=>{\n     (async () => {\n         const newLink = req.body;\n         const result = joi.validate(newLink, linkDetailsSchema);\n         if (result.error) {\n             res.status(400).send({ msg: \"validation failed\" });\n         } else {\n              await repo.save(newLink);\n             res.json({ newLink }).send();\n         }\n     })().catch(error => {\n         console.log('Error', error.message)\n     });\n    };\n    return {\n             httpGetLinks\n    };\n }\n"]}