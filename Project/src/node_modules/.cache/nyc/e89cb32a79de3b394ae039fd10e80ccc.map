{"version":3,"file":"/home/humberto/Documents/Superprof/Moises/Web/Project/src/backend/controllers/userController.ts","sources":["/home/humberto/Documents/Superprof/Moises/Web/Project/src/backend/controllers/userController.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+CAAmC;AACnC,iEAAmE;AACnE,uCAA2B;AAC3B,iEAAmE;AACnE,yEAA2E;AAE3E,SAAgB,iBAAiB;IAAjC,iBAgDC;IA9CG,4DAA4D;IAC5D,IAAM,cAAc,GAAG,kCAAiB,EAAE,CAAC;IAC3C,IAAM,eAAe,GAAG,kCAAiB,EAAE,CAAC;IAC5C,IAAM,kBAAkB,GAAG,0CAAqB,EAAE,CAAC;IAEnD,oDAAoD;IACpD,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;IAEhC,+CAA+C;IAC/C,IAAM,iBAAiB,GAAG;QACtB,EAAE,EAAE,GAAG,CAAC,MAAM,EAAE;QAChB,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE;QAC3B,QAAQ,EAAE,GAAG,CAAC,MAAM,EAAE;KACzB,CAAC;IAEF,+CAA+C;IAC/C,MAAM,CAAC,IAAI,CAAC,GAAG,EAAC,UAAC,GAAG,EAAE,GAAG;QACrB,CAAC;;;;;wBACS,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC;wBACnB,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;6BACrD,MAAM,CAAC,KAAK,EAAZ,wBAAY;wBACX,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;;4BAEV,qBAAM,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,EAAA;;wBAAzC,IAAI,GAAG,SAAkC;wBAC/C,GAAG,CAAC,IAAI,CAAC,EAAC,EAAE,EAAC,IAAI,EAAC,CAAC,CAAC,IAAI,EAAE,CAAC;;;;;aAElC,CAAC,EAAE,CAAC,KAAK,CAAC,UAAA,KAAK;YACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAA;QAAA,CAAC,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,kDAAkD;IAClD,MAAM,CAAC,GAAG,CAAC,MAAM,EAAC,UAAC,GAAG,EAAC,GAAG;QACtB,CAAC;;;;;wBACS,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;wBACX,qBAAM,cAAc,CAAC,OAAO,CAAC,EAAE,CAAC,EAAA;;wBAAxC,IAAI,GAAI,SAAgC;6BAC3C,CAAA,IAAI,IAAE,IAAI,CAAA,EAAV,wBAAU;wBACT,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,GAAG,EAAC,gBAAgB,EAAC,CAAC,CAAC;;4BAE/B,qBAAM,eAAe,CAAC,IAAI,CAAC,EAAC,IAAI,MAAA,EAAC,CAAC,EAAA;;wBAA1C,KAAK,GAAG,SAAkC;wBAC/B,qBAAM,kBAAkB,CAAC,IAAI,CAAC,EAAC,IAAI,MAAA,EAAC,CAAC,EAAA;;wBAAhD,QAAQ,GAAG,SAAqC;wBACtD,GAAG,CAAC,IAAI,CAAC,EAAC,IAAI,MAAA,EAAC,KAAK,OAAA,EAAE,QAAQ,UAAA,EAAC,CAAC,CAAC;;;;;aAExC,CAAC,EAAE,CAAC,KAAK,CAAC,UAAA,KAAK;YACZ,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,OAAO,CAAC,CAAA;QAAA,CAAC,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;IACC,OAAO,MAAM,CAAC;AACtB,CAAC;AAhDD,8CAgDC","sourcesContent":["import * as express from \"express\";\r\nimport { getUserRepository } from \"../repositories/userRepository\";\r\nimport * as joi from \"joi\";\r\nimport { getLinkRepository } from \"../repositories/linkRepository\";\r\nimport { getCommentsRepository } from \"../repositories/commentsRepository\";\r\n\r\nexport function getUserController(){\r\n\r\n    // Create a repository so we can perform database operations\r\n    const userRepository = getUserRepository();\r\n    const linksRepository = getLinkRepository();\r\n    const commentsRepository = getCommentsRepository();\r\n\r\n    // Create router instance so we can declare enpoints\r\n    const router = express.Router();\r\n\r\n    // Declare Joi Schema so we can validate movies\r\n    const userDetailsSchema = {\r\n        id: joi.number(),\r\n        email: joi.string().email(),\r\n        password: joi.string()\r\n    };\r\n\r\n    // HTTP POST http://localhost:8080/api/v1/users\r\n    router.post(\"/\",(req, res)=>{\r\n        (async()=>{\r\n            const newUser = req.body;\r\n            const result = joi.validate(newUser, userDetailsSchema);\r\n            if(result.error){\r\n                res.status(400).send();\r\n            }else{\r\n                const user = await userRepository.save(newUser);\r\n                res.json({ok:\"Ok\"}).send();\r\n            }\r\n        })().catch(error =>{\r\n            console.log('Error', error.message)});\r\n    });\r\n\r\n    // HTTP GET http://localhost:8080/api/v1/users/:id\r\n    router.get(\"/:id\",(req,res)=>{\r\n        (async()=>{\r\n            const id = req.params.id;\r\n            const user =  await userRepository.findOne(id);\r\n            if(user==null){\r\n                res.status(404).send({msg:\"user not found\"});\r\n            }else{\r\n                const links = await linksRepository.find({user})\r\n                const comments = await commentsRepository.find({user});\r\n                res.json({user,links, comments});\r\n            }\r\n        })().catch(error =>{\r\n            console.log('Error ', error.message)});\r\n    });\r\n        return router;\r\n}"]}