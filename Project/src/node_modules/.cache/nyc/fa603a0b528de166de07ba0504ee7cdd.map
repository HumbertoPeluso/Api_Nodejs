{"version":3,"file":"/home/humberto/Documents/Superprof/Moises/Web/Project/src/backend/controllers/userController.ts","sources":["/home/humberto/Documents/Superprof/Moises/Web/Project/src/backend/controllers/userController.ts"],"names":[],"mappings":"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","sourcesContent":["import * as express from \"express\";\r\nimport { getUserRepository } from \"../repositories/userRepository\";\r\nimport * as joi from \"joi\";\r\nimport { getLinkRepository } from \"../repositories/linkRepository\";\r\nimport { getCommentsRepository } from \"../repositories/commentsRepository\";\r\nimport { Repository } from \"typeorm\";\r\nimport { User } from \"../entities/user\";\r\nimport { Link } from \"../entities/link\";\r\nimport { Comments } from \"../entities/comments\";\r\n\r\n\r\n // Declare Joi Schema so we can validate movies\r\n const userDetailsSchema = {\r\n    id: joi.number(),\r\n    email: joi.string().email(),\r\n    password: joi.string()\r\n};\r\n\r\nexport function getUserHandler(userRepo:Repository<User>,linksRepo:Repository<Link>,commentsRepo:Repository<Comments>){\r\n\r\n    const getAnUserLinksAndComments = (req:express.Request,res:express.Response)=>{\r\n        (async()=>{\r\n            const id = req.params.id;\r\n            const user =  await userRepo.findOne(id);\r\n            if(user==null){\r\n                res.status(404).send({msg:\"user not found\"});\r\n            }else{\r\n                const links = await linksRepo.find({user})\r\n                const comments = await commentsRepo.find({user});\r\n                res.json({user,links, comments});\r\n            }\r\n        })().catch(error =>{\r\n            console.log('Error ', error.message)});\r\n    }\r\n\r\n    return{\r\n        getAnUserLinksAndComments:getAnUserLinksAndComments\r\n    }\r\n}\r\n\r\nexport function postUserHandler(userRepo:Repository<User>){\r\n    \r\n    const postAUser = (req:express.Request,res:express.Response)=>{\r\n        (async()=>{\r\n            const newUser = req.body;\r\n            const result = joi.validate(newUser, userDetailsSchema);\r\n            if(result.error){\r\n                res.status(400).send();\r\n            }else{\r\n                const user = await userRepo.save(newUser);\r\n                res.json({ok:\"Ok\"}).send();\r\n            }\r\n        })().catch(error =>{\r\n            console.log('Error', error.message)});\r\n    }\r\n    return{\r\n        postAUser:postAUser\r\n    }\r\n}\r\n\r\n\r\nexport function getUserController(){\r\n\r\n    // Create a repository so we can perform database operations\r\n    const userRepository = getUserRepository();\r\n    const linksRepository = getLinkRepository();\r\n    const commentsRepository = getCommentsRepository();\r\n\r\n    // Create router instance so we can declare enpoints\r\n    const router = express.Router();\r\n\r\n    const getUsers = getUserHandler(userRepository,linksRepository,commentsRepository)\r\n    const postUsers = postUserHandler(userRepository)\r\n\r\n\r\n        // HTTP GET http://localhost:8080/api/v1/users/:id\r\n        router.get(\"/:id\",getUsers.getAnUserLinksAndComments)\r\n\r\n        // HTTP POST http://localhost:8080/api/v1/users\r\n        router.post(\"/\", postUsers.postAUser)\r\n\r\n        return router;\r\n}"]}